{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\partightenfactor0
\ls1\ilvl0
\f0\fs32 \cf2 \cb3 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is Interface Builder's object library?\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between an outlet and an action?\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the role of a View Controller?\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is Model-View-Controller?\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why use Model-View-Controller?\cb1 \
\pard\tx560\pardeftab720\sl360\partightenfactor0
\cf2 \
1. The interface builders object library allows us to easily build interfaces by dragging objects from the library to use within our app. This saves us a lot of coding time.\
\
2. An outlet are things are parts that are generally just viewed, while actions are things the user has to act on.\
\
3. The View Controller is the part of Xcode where we write code that controls the items in our main storyboard. It's how we control items that we used from the Interface Builder's object library.\
\
4. MVC is a architectural way for organizing our application that splits it into three parts: Model, View, Controller. Model is how we store the different function/methods. View is where we decide the look and feel. Controller is how we manipulate the view while utilizing our model.\
\
5. We use it because it helps to separate input, processing, and output. It is also the most widely used and the one recommended by Apple. Using it will allow us to better contribute and understand code when working in group settings or open source projects. \
\
\
\
\
}